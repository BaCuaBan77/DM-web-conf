name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Run backend tests
      working-directory: ./backend
      run: mvn clean test -s settings.xml
    
    - name: Generate test report
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Backend Test Results
        path: backend/target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: true
    
    - name: Upload coverage reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: backend-coverage
        path: backend/target/site/jacoco/

  frontend-unit-tests:
    name: Frontend Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.18.3'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run unit tests
      working-directory: ./frontend
      run: npm test -- --run
    
    - name: Generate coverage report
      working-directory: ./frontend
      run: npm run test:coverage -- --run
    
    - name: Upload coverage reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: frontend-coverage
        path: frontend/coverage/

  frontend-e2e-tests:
    name: Frontend E2E Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.18.3'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Install Playwright browsers
      working-directory: ./frontend
      run: npx playwright install chromium --with-deps
    
    - name: Start backend server
      working-directory: ./backend
      run: |
        mvn spring-boot:run -s settings.xml > backend.log 2>&1 &
        echo $! > backend.pid
        # Wait for backend to start
        timeout 60 bash -c 'until curl -s http://localhost:8080/api/devices > /dev/null; do sleep 2; done'
    
    - name: Start frontend server
      working-directory: ./frontend
      run: |
        npm run dev > frontend.log 2>&1 &
        echo $! > frontend.pid
        # Wait for frontend to start
        timeout 60 bash -c 'until curl -s http://localhost:3000 > /dev/null; do sleep 2; done'
    
    - name: Run E2E tests
      working-directory: ./frontend
      run: npm run test:e2e
    
    - name: Upload Playwright report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-report
        path: frontend/playwright-report/
    
    - name: Stop servers
      if: always()
      run: |
        if [ -f backend/backend.pid ]; then kill $(cat backend/backend.pid) || true; fi
        if [ -f frontend/frontend.pid ]; then kill $(cat frontend/frontend.pid) || true; fi

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Run integration tests
      working-directory: ./backend
      run: mvn test -s settings.xml -Dtest="*Integration*,*EndToEnd*"
    
    - name: Upload integration test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: integration-test-results
        path: backend/target/surefire-reports/

  lint-and-format:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.18.3'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: TypeScript compilation check
      working-directory: ./frontend
      run: npx tsc --noEmit
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Java compilation check
      working-directory: ./backend
      run: mvn compile -s settings.xml

  summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-unit-tests, frontend-e2e-tests, integration-tests, lint-and-format]
    if: always()
    
    steps:
    - name: Check test results
      run: |
        if [ "${{ needs.backend-tests.result }}" != "success" ] || \
           [ "${{ needs.frontend-unit-tests.result }}" != "success" ] || \
           [ "${{ needs.frontend-e2e-tests.result }}" != "success" ] || \
           [ "${{ needs.integration-tests.result }}" != "success" ] || \
           [ "${{ needs.lint-and-format.result }}" != "success" ]; then
          echo "❌ One or more test jobs failed"
          exit 1
        else
          echo "✅ All tests passed successfully!"
        fi

