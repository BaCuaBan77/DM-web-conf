name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract metadata for backend
      id: meta-backend
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/dm-conf-backend
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Extract metadata for frontend
      id: meta-frontend
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/dm-conf-frontend
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ steps.meta-backend.outputs.tags }}
        labels: ${{ steps.meta-backend.outputs.labels }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/dm-conf-backend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/dm-conf-backend:buildcache,mode=max
        build-args: |
          BUILD_DATE=${{ github.event.head_commit.timestamp }}
          VCS_REF=${{ github.sha }}
    
    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ steps.meta-frontend.outputs.tags }}
        labels: ${{ steps.meta-frontend.outputs.labels }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/dm-conf-frontend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/dm-conf-frontend:buildcache,mode=max
        build-args: |
          BUILD_DATE=${{ github.event.head_commit.timestamp }}
          VCS_REF=${{ github.sha }}
    
    - name: Image digest
      run: |
        echo "Backend Image Digest: ${{ steps.meta-backend.outputs.digest }}"
        echo "Frontend Image Digest: ${{ steps.meta-frontend.outputs.digest }}"
    
    - name: Create deployment summary
      run: |
        echo "## üöÄ Docker Images Published" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Backend Image" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.meta-backend.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Frontend Image" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.meta-frontend.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Pull Commands" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ secrets.DOCKER_USERNAME }}/dm-conf-backend:latest" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ secrets.DOCKER_USERNAME }}/dm-conf-frontend:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  update-docker-compose:
    name: Update docker-compose.yml references
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Update docker-compose.yml
      run: |
        sed -i "s|build: ./backend|image: ${{ secrets.DOCKER_USERNAME }}/dm-conf-backend:latest|g" docker-compose.yml
        sed -i "s|build: ./frontend|image: ${{ secrets.DOCKER_USERNAME }}/dm-conf-frontend:latest|g" docker-compose.yml
    
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        commit-message: "ci: update docker-compose with published images"
        title: "Update docker-compose.yml with published Docker images"
        body: |
          This PR updates docker-compose.yml to use the published Docker images.
          
          - Backend: `${{ secrets.DOCKER_USERNAME }}/dm-conf-backend:latest`
          - Frontend: `${{ secrets.DOCKER_USERNAME }}/dm-conf-frontend:latest`
          
          Auto-generated by GitHub Actions.
        branch: update-docker-compose
        delete-branch: true

  notify:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: always()
    
    steps:
    - name: Deployment status
      run: |
        if [ "${{ needs.build-and-push.result }}" == "success" ]; then
          echo "‚úÖ Docker images built and pushed successfully!"
          echo "Backend: ${{ secrets.DOCKER_USERNAME }}/dm-conf-backend:latest"
          echo "Frontend: ${{ secrets.DOCKER_USERNAME }}/dm-conf-frontend:latest"
        else
          echo "‚ùå Docker image build/push failed"
          exit 1
        fi

